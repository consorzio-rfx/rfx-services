#!/bin/sh
### BEGIN INIT INFO
# Provides:          rfx-services
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Description:       reroute poorts for rfx services
### END INIT INFO

prefix=@prefix@
sysconfdir=@sysconfdir@
SCRIPT=@datadir@/rfx-services/service_reroute.sh
RUNAS=root



# dk_test_status [cnt_name] [status]
# status =  created, restarting, running, paused, exited, healthy
dk_test_status() {
#  cnt_id=$(docker ps -a -f name=$1 -q)
  cnt_st=$(docker ps -a -f name=$1 -f status=$2 -q)
#	[ x"${cnt_id}" = x"${cnt_st}" ] && return 0 || return 1
  [ ${cnt_st} ] && return 0 || return 1
}

# dk_get_status [cnt_name] [ans]
# return readable status of container either in _ans or $2
dk_get_status() {
  _ans="unhandled"
	$(dk_test_status $1 created) && _ans="created"
	$(dk_test_status $1 running) && _ans="running"
	$(dk_test_status $1 restarting) && _ans="restarting"
	$(dk_test_status $1 paused) && _ans="paused"
	$(dk_test_status $1 exited) && _ans="exited"
	$(dk_test_status $1 healthy) && _ans="healthy"
  [ -n "$2" ] && eval $2="$_ans"
}

retry() {
   n=0
   until [ $n -ge 5 ]
   do
      echo "testing for $@  [ attempt = $n ]"
      $@ && break
      n=$[$n+1]
      sleep 5
   done
}

start() {
  echo 'Rerouting ports for rfx services…' >&2
  enabled_sevices="$(cat ${sysconfdir}/rfx-services.enabled)"
  for s in ${enabled_sevices}; do
   retry dk_test_status ${s}_${s} running;
   local CMD="$SCRIPT -s ${s}_${s} reroute_ports";
   echo ${CMD};
   su -c "$CMD" $RUNAS;
  done
}

stop() {
  echo 'Stopping service…' >&2
  # kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}

uninstall() {
  # echo -n "Are you really sure you want to uninstall this service? That cannot be undone. [yes|No] "
  # local SURE
  # read SURE
  # if [ "$SURE" = "yes" ]; then
  #   stop
  #   rm -f "$PIDFILE"
  #   echo "Notice: log file is not be removed: '$LOGFILE'" >&2
  #   update-rc.d -f <NAME> remove
  #   rm -fv "$0"
  # fi
  :;
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  uninstall)
    uninstall
    ;;
  retart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|uninstall}"
esac
